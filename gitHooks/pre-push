#!/bin/bash

hasError=0
noSha="0000000000000000000000000000000000000000" #40 zeros repersents noSha

function error {
    hasError=1;
    echo "$@" 1>&2;
}

# Stage 1:
# Prevents pushing to:
#  Non-standard branch names (anything other than "bugfix/*", "hotfix/*", or "feature/*")
#  Already existing "release/*" branches
#  "dev" and "master"

while read localRef localSha remoteRef remoteSha; do
    case "$remoteRef" in
        refs/heads/bugfix/*|refs/heads/feature/*|refs/heads/hotfix/*)
            #Standard inputs, which are allowed
            ;;
        refs/tags/*)
            #Tags, which are also allowed
            ;;
        refs/heads/release/*)
            if [[ "$remoteSha" != "$noSha" ]]; then
                error "Error: Pushing '$localRef' to already existing release branch '$remoteRef'";
            elif [[ "$localRef" != "$remoteRef" ]] && [[ "$localRef" == refs/* ]]; then
                error "Trying to start release branch called '$remoteRef' with diffrent named local refrence '$localRef'";
            fi
            ;;
        refs/heads/dev | refs/heads/master)
            error "Error: Pushing to '$remoteRef' is not allowed";
            ;;
        *)
            error "Error: Pushing '$localRef' to non standard named branch '$remoteRef'"
            ;;
    esac
done

if [ $hasError -eq 1 ]; then
    error ""
    error "Error occoured. Check what you are pushing."
    error "If you are sure you wish to override the errors run again with --no-verify"
fi


exit $hasError