#!/bin/bash

exec 1>&2 # Redirect output to stderr.
e=0 # Setup exit code

# Verifies that the user is not committing on protected branches
branch="$(git rev-parse --abbrev-ref HEAD)"
protected="$(git config --bool --get "branch.$branch.protected")"

if [ -z "$protected" ]; then
    explicit=0
    if [ "$branch" == "dev" ] || [ "$branch" == "master" ] || [[ "$branch" == release/* ]]; then
        protected="true"
    else
        protected="false"
    fi
else
    explicit=1
fi

if [ "$protected" == "true" ]; then
    cat <<EOF
Error:  Attempting to commit directly to protected $branch
        Try swapping to a new branch first with:
            git checkout -b <branch name>
        To unprotect this branch:
            git config --add "branch.$branch.protected" false
EOF
    e=1
fi

## Disabled, it is a bit slow
#
# # Verifies that all the files refrenced by .csproj files are included in the git repo
# while read file; do (
#     dir=$(dirname "$file")
#     IFS=$'\n'
#     git ls-files --error-unmatch -- $(~/universalParser.js "$file" '$.Project.ItemGroup[*]["Compile","None"][*]["$"].Include' xml | sed -e 's!^!'"$dir"/'!') > /dev/null
# ) || e=1; done < <(find -name *.csproj)


# Exit
exit $e